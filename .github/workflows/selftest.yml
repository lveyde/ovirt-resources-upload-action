name: Self-test
on:
  push:
  pull_request:
jobs:
  selftest:
    name: Self-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Generate SSH key
        id: ssh-key
        run: |
          ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
          echo "::set-output name=private-key::$(cat ~/.ssh/id_rsa)"
          echo "::set-output name=public-key::$(cat ~/.ssh/id_rsa.pub)"
      - name: Start backing server
        run: |
          set -e
          docker build -t sshd test
          CONTAINER_ID=$(docker create -e "SSH_KEY=$(cat ~/.ssh/id_rsa.pub)" -p 22:2222 sshd)
          docker start "${CONTAINER_ID}"
          until [ "$(docker inspect -f '{{.State.Health.Status}}' '${CONTAINER_ID}')"=="healthy" ]; do
            sleep 1;
          done
      - name: Generate test data
        run:
          mkdir -p testdata
          for i in $(seq 1 1000); do
            touch testdata/$i
          done
      - name: Upload test data
        uses: ./
        with:
          host: 127.0.0.1
          username: test
          key: ${{ steps.ssh-key.outputs.private-key }}
          source: testdata/*
          target: /test
      - name: Check uploaded files
        run: |
          UPLOADED_FILES_COUNT=$(ssh -i ~/.ssh/id_rsa test@127.0.0.1 "ls /test" | wc -l)
          if [ "${UPLOADED_FILES_COUNT}" -ne 1000 ]; then
            echo "Incorrect number of files found on server: ${UPLOADED_FILES_COUNT}"
            exit 1
          fi
      - name: Upload test data with cleanup
        uses: ./
        with:
          host: 127.0.0.1
          username: test
          key: ${{ steps.ssh-key.outputs.private-key }}
          source: testdata/*
          target: /test
          cleanup: yes
          keep_files_count: 10
      - name: Check uploaded files
        run: |
          UPLOADED_FILES_COUNT=$(ssh -i ~/.ssh/id_rsa test@127.0.0.1 "ls /test" | wc -l)
          if [ "${UPLOADED_FILES_COUNT}" -ne 10 ]; then
            echo "Incorrect number of files found on server: ${UPLOADED_FILES_COUNT}"
            exit 1
          fi